(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    163570,       3176]
NotebookOptionsPosition[    159630,       3045]
NotebookOutlinePosition[    160057,       3064]
CellTagsIndexPosition[    160014,       3061]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Using PRIMAT. Posterior distribution for baryons abundance.", "Chapter",
 CellChangeTimes->{{3.720325027046112*^9, 3.720325035078391*^9}, {
   3.722627040669939*^9, 3.722627051266953*^9}, {3.722666278336769*^9, 
   3.722666284229516*^9}, 3.722667623051669*^9, {3.722668729362753*^9, 
   3.7226687437251663`*^9}, {3.725263270190885*^9, 3.7252632706368437`*^9}}],

Cell[CellGroupData[{

Cell["Loading PRIMAT", "Subsection",
 CellChangeTimes->{{3.722627131658196*^9, 3.7226271365289717`*^9}, {
  3.722665240944776*^9, 3.72266524124852*^9}, {3.725263204521102*^9, 
  3.725263205222158*^9}}],

Cell["\<\
Setting the notebook directory (in batch mode this is not evaluated because \
it seems to be the default one)\
\>", "Text",
 CellChangeTimes->{{3.72266522950069*^9, 3.722665237685095*^9}, 
   3.72268092494451*^9, {3.722681154664906*^9, 3.722681163156636*^9}, {
   3.722682328844692*^9, 3.722682342680447*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.722682311429455*^9, 3.7226823164429626`*^9}, 
   3.7226823614573402`*^9}],

Cell["\<\
Then we go the parent directory, or base directory of PRIMAT.\
\>", "Text",
 CellChangeTimes->{{3.722682344519925*^9, 3.722682357655066*^9}, {
  3.725263212766704*^9, 3.7252632133451977`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"ParentDirectory", "[", 
   RowBox[{"Directory", "[", "]"}], "]"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.693991634023436*^9, 3.693991652295326*^9}, {
   3.693991683803711*^9, 3.693991695148983*^9}, 3.6947957225347357`*^9, {
   3.699863879637285*^9, 3.699863880492168*^9}, {3.699863992861474*^9, 
   3.6998639929768543`*^9}, {3.699895053526989*^9, 3.699895055859015*^9}, {
   3.699896790723095*^9, 3.699896794461301*^9}, {3.699933649566367*^9, 
   3.6999336496255627`*^9}, {3.700043367718549*^9, 3.700043370327463*^9}, {
   3.715934694586144*^9, 3.715934694930004*^9}, {3.7159347275061626`*^9, 
   3.7159347279589863`*^9}, {3.722682263308607*^9, 3.7226822885017633`*^9}}],

Cell[BoxData["\<\"/Users/pitrou/Dropbox/iap/notebooks/BBN\"\>"], "Output",
 CellChangeTimes->{
  3.7226823003626413`*^9, 3.722682362644906*^9, 3.72268801711126*^9, {
   3.7226880866443787`*^9, 3.722688101797039*^9}, 3.7226881647978373`*^9, 
   3.722688644295006*^9, 3.722688703226775*^9, 3.722689515067047*^9, 
   3.722690191183784*^9, 3.722690311189973*^9, 3.722843622739162*^9}]
}, Open  ]],

Cell["\<\
We load PRIMAT. It takes some time because it starts reading the file with \
nuclear reactions and deduces which are the nuclides needed, 
and it starts to build formally the network of equations\
\>", "Text",
 CellChangeTimes->{{3.722690254282024*^9, 3.722690288210243*^9}, {
  3.722690477786078*^9, 3.7226904782690973`*^9}, {3.725263222885673*^9, 
  3.725263223565138*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"<<", "PRIMAT-Main.m"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.722627141741618*^9, 3.722627161037244*^9}, {
   3.72266446915127*^9, 3.7226644693502483`*^9}, {3.722664592812298*^9, 
   3.722664593183573*^9}, {3.722664687261566*^9, 3.722664687461649*^9}, {
   3.722664834402657*^9, 3.7226648347171087`*^9}, 3.722666575975152*^9, {
   3.7226902512688723`*^9, 3.722690253491892*^9}, {3.725262595482216*^9, 
   3.725262596066578*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"16.860815`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.722690330564206*^9, 3.722843643171466*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Posterior in baryons", "Subsection",
 CellChangeTimes->{{3.720856009574362*^9, 3.720856016187047*^9}, {
  3.722667146204348*^9, 3.722667148463883*^9}}],

Cell[CellGroupData[{

Cell["Launch of Monte-Carlo", "Subsubsection",
 CellChangeTimes->{{3.722667130330158*^9, 3.722667141110572*^9}, {
  3.7226676051046*^9, 3.722667613182033*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$ParallelBool", "=", "True"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$RandomNuclearRates", "=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Random\[Tau]neutron", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$Randomh2\[CapitalOmega]b", "=", "False"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Meanh2\[CapitalOmega]b0", "=", "h2\[CapitalOmega]b0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table\[Omega]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"\[Omega]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
        RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
        RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", "\[Sigma]h2\[CapitalOmega]b0"}]}], 
      "}"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.69848323616068*^9, 3.698483283195385*^9}, {
   3.698483492115901*^9, 3.698483546772318*^9}, 3.698484409548135*^9, {
   3.698484943612924*^9, 3.698484943684651*^9}, {3.6984853181193*^9, 
   3.698485318592833*^9}, {3.699623953951713*^9, 3.699623954075385*^9}, {
   3.699647493030272*^9, 3.69964749455515*^9}, {3.699813851376598*^9, 
   3.699813851829754*^9}, {3.699895242867597*^9, 3.699895243087657*^9}, {
   3.719926688714079*^9, 3.719926689092946*^9}, 3.719927620320005*^9, {
   3.7199286300780497`*^9, 3.719928636124754*^9}, 3.71992886170874*^9, {
   3.719929298391362*^9, 3.719929301234799*^9}, {3.71998524120713*^9, 
   3.719985268884714*^9}, 3.7199989114344797`*^9, {3.719999738139923*^9, 
   3.7199997393885527`*^9}, 3.719999847142634*^9, {3.71999987939039*^9, 
   3.719999880853415*^9}, {3.720000211428543*^9, 3.720000212012147*^9}, 
   3.720000350119755*^9, {3.720000498140634*^9, 3.720000498447751*^9}, {
   3.720004080752551*^9, 3.720004081128071*^9}, {3.720004406260459*^9, 
   3.7200044065744953`*^9}, {3.720014552666999*^9, 3.720014552797311*^9}, {
   3.720014724594602*^9, 3.720014725633811*^9}, {3.72001605320323*^9, 
   3.720016057912895*^9}, {3.720016121825325*^9, 3.720016133678082*^9}, {
   3.720017203927472*^9, 3.720017204135603*^9}, {3.720017236559971*^9, 
   3.720017236697433*^9}, {3.720017299003253*^9, 3.7200172991469812`*^9}, 
   3.720084898139201*^9, 3.720084961043707*^9, {3.720085104879825*^9, 
   3.720085105084141*^9}, {3.720085181354106*^9, 3.720085181490789*^9}, {
   3.720085254028522*^9, 3.7200852718512793`*^9}, {3.720085325379887*^9, 
   3.720085371824778*^9}, 3.720086287367723*^9, 3.720086456207498*^9, {
   3.720086534622987*^9, 3.72008653552596*^9}, {3.720086650662726*^9, 
   3.7200866771133738`*^9}, {3.720087834720788*^9, 3.720087837528121*^9}, 
   3.720087893496807*^9, {3.7200903172447367`*^9, 3.72009031737289*^9}, {
   3.720090359078817*^9, 3.7200903592151623`*^9}, {3.720090569356537*^9, 
   3.720090569491962*^9}, 3.720091430239758*^9, 3.7200914867747097`*^9, 
   3.720271127402814*^9, {3.720272201524921*^9, 3.7202722018201313`*^9}, {
   3.720276565199359*^9, 3.720276565552258*^9}, {3.720278864286154*^9, 
   3.720278866012491*^9}, {3.72032395746952*^9, 3.720323969102572*^9}, {
   3.720347085643496*^9, 3.720347086027955*^9}, {3.72034724411103*^9, 
   3.720347244730599*^9}, {3.720347468338109*^9, 3.720347500222527*^9}, {
   3.720347615030464*^9, 3.720347615167839*^9}, {3.720349412599348*^9, 
   3.720349436017354*^9}, {3.720364700175276*^9, 3.7203647003254766`*^9}, {
   3.720364787153368*^9, 3.7203647883427896`*^9}, {3.7206821855482397`*^9, 
   3.720682186233452*^9}, {3.720682293377026*^9, 3.720682293650524*^9}, {
   3.7207061720793858`*^9, 3.720706172363557*^9}, {3.7207066277504177`*^9, 
   3.720706628261937*^9}, 3.720706735892061*^9, {3.720764559131895*^9, 
   3.720764559447031*^9}, {3.720765561728302*^9, 3.720765562131061*^9}, {
   3.720770838015061*^9, 3.720770849070846*^9}, {3.720771999897731*^9, 
   3.720772000819525*^9}, {3.720793954426034*^9, 3.72079396331168*^9}, {
   3.7207940823740253`*^9, 3.720794084351609*^9}, {3.720812068675112*^9, 
   3.720812071747436*^9}, {3.72085444561716*^9, 3.720854445692417*^9}, {
   3.7208560337956457`*^9, 3.720856049417244*^9}, {3.720856658470339*^9, 
   3.720856671832883*^9}, {3.720974622043047*^9, 3.720974630245854*^9}, {
   3.72217154926623*^9, 3.722171550302021*^9}, 3.722222966514534*^9, {
   3.722259177764709*^9, 3.7222591783676567`*^9}, {3.722667155205721*^9, 
   3.7226671569026947`*^9}, {3.722709503998715*^9, 3.722709504454348*^9}, 
   3.725194293547634*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputePrincipalAbundanceBaryonsZoom", "[", "\[Omega]_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ResultMean", ",", "Result\[Sigma]", ",", "Meanh2\[CapitalOmega]b0Old"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Meanh2\[CapitalOmega]b0Old", "=", "Meanh2\[CapitalOmega]b0"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Meanh2\[CapitalOmega]b0", "=", "\[Omega]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"RunPRIMATMonteCarlo", "[", "LengthMC", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"YP", "=", 
      RowBox[{"4", 
       RowBox[{"ElementColumn", "[", "\"\<a\>\"", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"YDH", "=", 
      RowBox[{
       SuperscriptBox["10", "5"], 
       RowBox[{
        RowBox[{"ElementColumn", "[", "\"\<d\>\"", "]"}], "/", 
        RowBox[{"ElementColumn", "[", "\"\<p\>\"", "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"YHe3H", "=", 
      RowBox[{
       SuperscriptBox["10", "5"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ElementColumn", "[", "\"\<t\>\"", "]"}], "+", 
          RowBox[{"ElementColumn", "[", "\"\<He3\>\"", "]"}]}], ")"}], "/", 
        RowBox[{"ElementColumn", "[", "\"\<p\>\"", "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"YLi7H", "=", 
      RowBox[{
       SuperscriptBox["10", "10"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ElementColumn", "[", "\"\<Li7\>\"", "]"}], "+", 
          RowBox[{"ElementColumn", "[", "\"\<Be7\>\"", "]"}]}], ")"}], "/", 
        RowBox[{"ElementColumn", "[", "\"\<p\>\"", "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Meanh2\[CapitalOmega]b0", "=", "Meanh2\[CapitalOmega]b0Old"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"YP", ",", "YDH", ",", "YHe3H", ",", "YLi7H"}], "}"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6984833154076033`*^9, 3.698483379409589*^9}, 
   3.698484306306798*^9, {3.698488972645253*^9, 3.6984889738771133`*^9}, {
   3.6985620313254957`*^9, 3.6985620322191143`*^9}, {3.698649314081522*^9, 
   3.6986493268353863`*^9}, {3.699362916658914*^9, 3.69936292768295*^9}, {
   3.69981022542689*^9, 3.699810226938348*^9}, {3.699892393376378*^9, 
   3.699892397277631*^9}, {3.6998952335433683`*^9, 3.699895233789425*^9}, {
   3.700017698720181*^9, 3.700017698850069*^9}, {3.700283210276958*^9, 
   3.700283290943095*^9}, {3.700283331067573*^9, 3.700283345093172*^9}, {
   3.7159571770891113`*^9, 3.715957188618773*^9}, {3.7186084451827173`*^9, 
   3.7186084547846203`*^9}, {3.719925995284095*^9, 3.7199260188212833`*^9}, 
   3.719926147463952*^9, {3.7199262222105722`*^9, 3.719926312248151*^9}, {
   3.719926496615863*^9, 3.7199264968474216`*^9}, 3.7199266196896067`*^9, {
   3.7199267508096647`*^9, 3.719926752216317*^9}, {3.719927405604537*^9, 
   3.719927471926124*^9}, {3.719928075527175*^9, 3.7199280859208508`*^9}, {
   3.719928282305084*^9, 3.719928295151556*^9}, {3.719928505181739*^9, 
   3.719928530947657*^9}, {3.719928579485033*^9, 3.719928604448215*^9}, {
   3.719928694395966*^9, 3.719928709247592*^9}, {3.71992914763241*^9, 
   3.7199292326971283`*^9}, {3.719929330665441*^9, 3.719929336461997*^9}, {
   3.720085864505526*^9, 3.720085864758705*^9}, {3.7203239735378523`*^9, 
   3.72032398012948*^9}, {3.720345229336891*^9, 3.720345355694384*^9}, {
   3.720679960349841*^9, 3.720679992871812*^9}, {3.720856053536051*^9, 
   3.7208560722445374`*^9}, {3.7208575094087753`*^9, 
   3.7208575162031803`*^9}, {3.722171547944769*^9, 3.7221715516218357`*^9}, 
   3.722698690902294*^9, 3.72270904703047*^9, {3.72526342693885*^9, 
   3.725263427279245*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LengthMC", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MachineNumerics", "=", "\"\<\>\""}], 
  RowBox[{"(*", "$MachineName", "*)"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.719934945293442*^9, 3.7199349546746883`*^9}, {
  3.719998584982745*^9, 3.7199985979091253`*^9}, {3.719998866057616*^9, 
  3.719998870476666*^9}, {3.719999234370306*^9, 3.719999240029031*^9}, {
  3.7200160129731216`*^9, 3.720016028384159*^9}, {3.7200875766544733`*^9, 
  3.720087576914487*^9}, {3.7208547146408033`*^9, 3.720854718690468*^9}, {
  3.720856090425619*^9, 3.7208561215339613`*^9}, {3.720856564923476*^9, 
  3.7208565659688387`*^9}, {3.720856795195518*^9, 3.720856801346232*^9}, {
  3.720856886396854*^9, 3.720856886621976*^9}, {3.720877748530025*^9, 
  3.720877748649571*^9}, {3.721033975102457*^9, 3.7210339778421392`*^9}, {
  3.72103415656383*^9, 3.721034162766083*^9}, {3.721044382515964*^9, 
  3.7210443826396933`*^9}, {3.721420649974944*^9, 3.72142065140576*^9}, {
  3.722667183488999*^9, 3.722667199286933*^9}, {3.722767441430648*^9, 
  3.722767443181777*^9}}],

Cell["\<\
We run the Monte - Carlo on the grid. Very long (hours, days)\
\>", "Text",
 CellChangeTimes->{{3.722667200362329*^9, 3.722667214303863*^9}, 
   3.722667597345401*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Timing", "[", 
     RowBox[{
      RowBox[{"TableYsLowMiddleUp3", "=", 
       RowBox[{
       "ComputePrincipalAbundanceBaryonsZoom", "/@", "Table\[Omega]"}]}], 
      ";"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "\"\<MonteCarlo/YsOmega\>\"", "<>", "MachineNumerics", "<>", 
       "\"\<.mx\>\""}], ",", "TableYsLowMiddleUp3", ",", "\"\<MX\>\""}], 
     "]"}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.719934945293442*^9, 3.7199349546746883`*^9}, {
  3.719998584982745*^9, 3.7199985979091253`*^9}, {3.719998866057616*^9, 
  3.719998870476666*^9}, {3.719999234370306*^9, 3.719999240029031*^9}, {
  3.7200160129731216`*^9, 3.720016028384159*^9}, {3.7200875766544733`*^9, 
  3.720087576914487*^9}, {3.7208547146408033`*^9, 3.720854718690468*^9}, {
  3.720856090425619*^9, 3.7208561215339613`*^9}, {3.720856564923476*^9, 
  3.7208565659688387`*^9}, {3.720856795195518*^9, 3.720856801346232*^9}, {
  3.720856886396854*^9, 3.720856886621976*^9}, {3.720877748530025*^9, 
  3.720877748649571*^9}, {3.721033975102457*^9, 3.7210339778421392`*^9}, {
  3.72103415656383*^9, 3.721034162766083*^9}, {3.721044382515964*^9, 
  3.7210443826396933`*^9}, {3.721420649974944*^9, 3.72142065140576*^9}, {
  3.722667183488999*^9, 3.722667199286933*^9}, {3.722669588845536*^9, 
  3.722669590450852*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running a Monte-Carlo with \"\>", "\[InvisibleSpace]", "1000", 
   "\[InvisibleSpace]", "\<\" points.\"\>"}],
  SequenceForm["Running a Monte-Carlo with ", 1000, " points."],
  Editable->False]], "Print",
 CellChangeTimes->{3.722667219176227*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.722667224609082*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results", "Subsubsection",
 CellChangeTimes->{{3.720856602800934*^9, 3.720856605391925*^9}}],

Cell["\<\
Once this is over we load the results. We give the name of the machine on \
which this was performed\
\>", "Text",
 CellChangeTimes->{{3.722667229278508*^9, 3.722667245770043*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MachineOfRuns", "=", "\"\<\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.720856229365209*^9, 3.720856231557259*^9}, {
   3.720918852056264*^9, 3.720918852928096*^9}, {3.720959412619364*^9, 
   3.720959413441728*^9}, {3.72257156783116*^9, 3.72257157603607*^9}, 
   3.722767447428653*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TableYsLowMiddleUp3", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<MonteCarlo/YsOmega\>\"", "<>", "MachineOfRuns", "<>", 
     "\"\<.mx\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7200851237797318`*^9, 3.720085130456729*^9}, 
   3.720085390018942*^9, {3.7200857968556013`*^9, 3.720085798352653*^9}, {
   3.720086780172572*^9, 3.7200867809744883`*^9}, {3.720087009467896*^9, 
   3.720087018208871*^9}, {3.720087087365006*^9, 3.720087087570513*^9}, {
   3.720087217363599*^9, 3.7200872298719587`*^9}, {3.720087589393944*^9, 
   3.720087594900762*^9}, 3.720347352237183*^9, 3.7205047397713118`*^9, {
   3.7208562253406267`*^9, 3.7208562354274883`*^9}, {3.722667267109717*^9, 
   3.722667268684057*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Import\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", ButtonNote -> \
\\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.725193847339123*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableYsLowMiddleUp3", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.7207573215596046`*^9, 3.720757322043522*^9}, 
   3.7207575604217157`*^9, 3.7207716252771997`*^9, {3.720789797255357*^9, 
   3.720789826019519*^9}, {3.720789979166996*^9, 3.720789983969207*^9}, 
   3.7207903131352654`*^9, {3.720790415284583*^9, 3.720790423968968*^9}, {
   3.720853205253642*^9, 3.720853210001136*^9}, {3.720856238476171*^9, 
   3.720856238633527*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.7208569729719257`*^9, 3.72085908315467*^9, 3.7208627553591957`*^9, 
   3.720866843023528*^9, 3.720918854592929*^9, 3.720937263144415*^9, 
   3.7209373419671*^9, 3.7209590155811253`*^9, 3.720959063024538*^9, 
   3.720959414727015*^9, 3.720959554794293*^9, 3.7209745108383017`*^9, 
   3.720974634824654*^9, 3.721103643364348*^9, 3.72139508454196*^9, 
   3.7214041371101103`*^9, 3.721504068217802*^9, 3.721504196892308*^9, 
   3.721544885454118*^9, 3.722086534661108*^9, 3.722148161616873*^9, {
   3.722571562315559*^9, 3.722571577532271*^9}, 3.722667270078961*^9, 
   3.722845881012157*^9, 3.725193847482719*^9}]
}, Open  ]],

Cell["\<\
We interpolate the lowermiddle and upper quantiles, and also the mean and \
standard deviation\
\>", "Text",
 CellChangeTimes->{{3.722667276475978*^9, 3.7226673032350483`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MyPair", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ValueLow\[Omega]", "[", "i_", "]"}], ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{"MyPair", "[", 
    RowBox[{"Table\[Omega]", ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Quantile", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", "0.15865", "}"}]}], "]"}], "&"}], "/@", 
       RowBox[{"TableYsLowMiddleUp3", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "i"}], "]"}], "]"}]}], "]"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ValueMiddle\[Omega]", "[", "i_", "]"}], ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{"MyPair", "[", 
    RowBox[{"Table\[Omega]", ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Quantile", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", "0.50", "}"}]}], "]"}], "&"}], "/@", 
       RowBox[{"TableYsLowMiddleUp3", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "i"}], "]"}], "]"}]}], "]"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ValueHigh\[Omega]", "[", "i_", "]"}], ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{"MyPair", "[", 
    RowBox[{"Table\[Omega]", ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Quantile", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"1", "-", "0.15865"}], "}"}]}], "]"}], "&"}], "/@", 
       RowBox[{"TableYsLowMiddleUp3", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "i"}], "]"}], "]"}]}], "]"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ValueMean\[Omega]", "[", "i_", "]"}], ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{"MyPair", "[", 
    RowBox[{"Table\[Omega]", ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mean", "[", "#", "]"}], "&"}], "/@", 
       RowBox[{"TableYsLowMiddleUp3", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "i"}], "]"}], "]"}]}], "]"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Value\[Sigma]\[Omega]", "[", "i_", "]"}], ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{"MyPair", "[", 
    RowBox[{"Table\[Omega]", ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StandardDeviation", "[", "#", "]"}], "&"}], "/@", 
       RowBox[{"TableYsLowMiddleUp3", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "i"}], "]"}], "]"}]}], "]"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.719926534425353*^9, 3.7199266248280163`*^9}, {
  3.72008608860036*^9, 3.7200862312841454`*^9}, {3.7200873397416677`*^9, 
  3.7200873409435863`*^9}, {3.720087505731646*^9, 3.7200875222388153`*^9}, {
  3.720087717136323*^9, 3.720087725264461*^9}, {3.72075658745004*^9, 
  3.720756609703611*^9}, {3.720756722533214*^9, 3.720756796764279*^9}, {
  3.720757050074028*^9, 3.720757053325489*^9}, {3.7207571123416023`*^9, 
  3.720757118821968*^9}, {3.720856265178772*^9, 3.7208562859973707`*^9}, {
  3.722667316993732*^9, 3.722667317467395*^9}}],

Cell["The likelihood for observed abundances", "Text",
 CellChangeTimes->{{3.722667323821642*^9, 3.7226673339477158`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LikeliHood", "[", 
    RowBox[{"{", 
     RowBox[{"Yobs_", ",", "\[Sigma]obs_"}], "}"}], "]"}], "[", "Yth_", "]"}],
   ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SqrtBox[
      RowBox[{"2", "\[Pi]"}]], "\[Sigma]obs"}]], 
   RowBox[{"Exp", "[", 
    FractionBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Yth", "-", "Yobs"}], ")"}], "2"]}], 
     RowBox[{"2", 
      SuperscriptBox["\[Sigma]obs", "2"]}]], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.720755149165872*^9, 3.720755253960331*^9}, 
   3.7207557109662247`*^9, {3.720755959646954*^9, 3.720755971154682*^9}, {
   3.7208124969169397`*^9, 3.720812599930131*^9}, 3.7208137191486197`*^9, {
   3.720856326770278*^9, 3.720856332167869*^9}}],

Cell["The prior from CMB on abundances", "Text",
 CellChangeTimes->{{3.72266734417655*^9, 3.722667354130075*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PostCMB", "[", "h2\[CapitalOmega]b0_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Delta]h2\[CapitalOmega]b0", "=", 
       RowBox[{"h2\[CapitalOmega]b0", "-", "Meanh2\[CapitalOmega]b0"}]}], 
      "}"}], ",", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        SqrtBox[
         RowBox[{"2", "\[Pi]"}]], "\[Sigma]h2\[CapitalOmega]b0"}]], 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", "\[Delta]h2\[CapitalOmega]b0", ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["\[Sigma]h2\[CapitalOmega]b0", "2"]}]], "]"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720974562242751*^9, 3.720974564267857*^9}, {
  3.720974646114352*^9, 3.7209746471575413`*^9}}],

Cell["\<\
This is to mimic codes which obtain 2.61 instead of 2.46 in D/H.\
\>", "Text",
 CellChangeTimes->{{3.720938800174211*^9, 3.720938811354834*^9}, {
  3.722667478374405*^9, 3.722667481038539*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FakeWrongDeuterium", ":=", "0"}], 
  RowBox[{"(*", 
   RowBox[{"-", "0.15"}], "*)"}], ";"}]], "Input",
 CellChangeTimes->{{3.720938791451647*^9, 3.720938797566729*^9}, {
  3.720939183362821*^9, 3.720939184869144*^9}, {3.722148165901023*^9, 
  3.7221481676128197`*^9}, {3.72214861730482*^9, 3.722148619334918*^9}}],

Cell["The posterior from BBN", "Text",
 CellChangeTimes->{{3.72266738512521*^9, 3.722667390672348*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]ObsYHeCorrect", "=", "0.0040"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"YHeobsCorrect", "=", "0.2449"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]ObsYHeBAD", "=", "0.0022"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YHeobsBAD", "=", "0.2551"}], ";"}]}], "Input",
 CellChangeTimes->{{3.720415145456463*^9, 3.720415145584188*^9}, {
   3.720417838169162*^9, 3.720417838708407*^9}, {3.7204182085500603`*^9, 
   3.720418229299711*^9}, {3.720419831619411*^9, 3.720419850727447*^9}, {
   3.720420079835889*^9, 3.720420083954838*^9}, {3.720424648488002*^9, 
   3.720424651245687*^9}, {3.720429600035941*^9, 3.720429671345216*^9}, 
   3.720430584546988*^9, {3.720431270782012*^9, 3.720431278219769*^9}, {
   3.720431462114716*^9, 3.720431475765819*^9}, 3.7226655269772043`*^9, {
   3.722667468477088*^9, 3.72266747089596*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"YHeobs", "=", "YHeobsCorrect"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]ObsYHe", "=", "\[Sigma]ObsYHeCorrect"}], ";"}]}], "Input",
 CellChangeTimes->{{3.720415145456463*^9, 3.720415145584188*^9}, {
   3.720417838169162*^9, 3.720417838708407*^9}, {3.7204182085500603`*^9, 
   3.720418229299711*^9}, {3.720419831619411*^9, 3.720419850727447*^9}, {
   3.720420079835889*^9, 3.720420083954838*^9}, {3.720424648488002*^9, 
   3.720424651245687*^9}, {3.720429600035941*^9, 3.720429671345216*^9}, 
   3.720430584546988*^9, {3.720431270782012*^9, 3.720431278219769*^9}, {
   3.720431462114716*^9, 3.720431475765819*^9}, {3.7226655269772043`*^9, 
   3.7226655414400177`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]ObsDH", "=", "0.030"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YDHObs", "=", "2.527"}], ";"}]}], "Input",
 CellChangeTimes->{{3.720415145456463*^9, 3.720415145584188*^9}, {
  3.720417838169162*^9, 3.720417838708407*^9}, {3.7204182085500603`*^9, 
  3.720418229299711*^9}, {3.720419831619411*^9, 3.720419850727447*^9}, {
  3.720420079835889*^9, 3.720420083954838*^9}, {3.720424648488002*^9, 
  3.720424651245687*^9}, {3.720429600035941*^9, 3.720429632724646*^9}, {
  3.7204350780385113`*^9, 3.720435078585918*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Meanh2\[CapitalOmega]b0", "=", 
  "Meanh2\[CapitalOmega]b0Planck"}]], "Input",
 CellChangeTimes->{{3.7226675256019487`*^9, 3.7226675501274548`*^9}}],

Cell[BoxData["0.02225`"], "Output",
 CellChangeTimes->{3.722667550483378*^9, 3.722845890220942*^9, 
  3.725193849564052*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "LogPostBBN\[Omega]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LogPostBBN\[Omega]", "[", 
    RowBox[{"{", 
     RowBox[{"YP_", ",", "\[Sigma]YP_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"LogPostBBN\[Omega]", "[", 
     RowBox[{"{", 
      RowBox[{"YP", ",", "\[Sigma]YP"}], "}"}], "]"}], "=", 
    RowBox[{"Interpolation", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"Table\[Omega]", ",", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Mean", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"LikeliHood", "[", 
                 RowBox[{"{", 
                  RowBox[{"YP", ",", "\[Sigma]YP"}], "}"}], "]"}], "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"LikeliHood", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"YDHObs", "+", "FakeWrongDeuterium"}], ",", 
                   "\[Sigma]ObsDH"}], "}"}], "]"}], "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], ")"}], "&"}],
            "/@", "TableYsLowMiddleUp3"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.720755964570496*^9, 3.720755966001144*^9}, {
   3.720756087689329*^9, 3.720756178740602*^9}, {3.720756213868531*^9, 
   3.720756228790444*^9}, {3.7207562681836643`*^9, 3.720756377232287*^9}, 
   3.720756637006136*^9, {3.72075761261989*^9, 3.720757676146487*^9}, 
   3.720758232951933*^9, {3.720771589039825*^9, 3.720771591054431*^9}, {
   3.7207900579844093`*^9, 3.7207900727268867`*^9}, {3.720814014672709*^9, 
   3.720814033429448*^9}, {3.7208563181888313`*^9, 3.720856351275478*^9}, {
   3.720857218704536*^9, 3.720857223599648*^9}, {3.720938683432889*^9, 
   3.720938690379677*^9}, {3.720938777382695*^9, 3.7209387959437113`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PosteriorRaw\[Omega]", "[", "\[Omega]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "@", 
    RowBox[{
     RowBox[{"LogPostBBN\[Omega]", "[", 
      RowBox[{"{", 
       RowBox[{"YHeobs", ",", "\[Sigma]ObsYHe"}], "}"}], "]"}], "[", 
     "\[Omega]", "]"}]}], 
   RowBox[{"PostCMB", "[", "\[Omega]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PosteriorRawBAD\[Omega]", "[", "\[Omega]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Exp", "@", 
     RowBox[{
      RowBox[{"LogPostBBN\[Omega]", "[", 
       RowBox[{"{", 
        RowBox[{"YHeobsBAD", ",", "\[Sigma]ObsYHeBAD"}], "}"}], "]"}], "[", 
      "\[Omega]", "]"}]}], 
    RowBox[{"PostCMB", "[", "\[Omega]", "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PosteriorRawBBN\[Omega]", "[", "\[Omega]_", "]"}], ":=", 
  RowBox[{"Exp", "@", 
   RowBox[{
    RowBox[{"LogPostBBN\[Omega]", "[", 
     RowBox[{"{", 
      RowBox[{"YHeobs", ",", "\[Sigma]ObsYHe"}], "}"}], "]"}], "[", 
    "\[Omega]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PosteriorRawBBNBAD\[Omega]", "[", "\[Omega]_", "]"}], ":=", 
  RowBox[{"Exp", "@", 
   RowBox[{
    RowBox[{"LogPostBBN\[Omega]", "[", 
     RowBox[{"{", 
      RowBox[{"YHeobsBAD", ",", "\[Sigma]ObsYHeBAD"}], "}"}], "]"}], "[", 
    "\[Omega]", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7207577252576103`*^9, 3.720757764811181*^9}, {
  3.7207900753550043`*^9, 3.720790080133896*^9}, {3.720856393618484*^9, 
  3.7208564123480864`*^9}, {3.720857663040412*^9, 3.7208576687791243`*^9}, {
  3.720857703760969*^9, 3.720857720250491*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"NormPosterior\[Omega]", ",", "NormPosteriorBAD\[Omega]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormPosterior\[Omega]", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"PosteriorRaw\[Omega]", "[", "\[Omega]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
        RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
        RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormPosteriorBAD\[Omega]", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"PosteriorRawBAD\[Omega]", "[", "\[Omega]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
        RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
        RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7201841190841513`*^9, 3.720184172109394*^9}, {
  3.720186477203744*^9, 3.7201864904658413`*^9}, {3.720434491351212*^9, 
  3.720434498284884*^9}, {3.7207714710376997`*^9, 3.720771502098003*^9}, {
  3.7207897095042973`*^9, 3.7207897127210093`*^9}, {3.720856415768182*^9, 
  3.720856458305004*^9}, {3.720857011049943*^9, 3.720857013051805*^9}, {
  3.720857359918045*^9, 3.720857364978931*^9}, {3.72085775914152*^9, 
  3.7208577817971897`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\\*RowBox[{\\\"2493.389252508954`\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\
\"1.9531249999999996`*^7\\\"}], \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.02225`\\\"}], \\\"+\\\", \\\"\[Omega]\\\"}], \
\\\")\\\"}], \\\"2\\\"]}], RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], RowBox[{RowBox[{\\\"Interpolation\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0.02097`\\\", \\\",\\\", \
\\\"0.02105`\\\", \\\",\\\", \\\"0.02113`\\\", \\\",\\\", \\\"0.02121`\\\", \
\\\",\\\", \\\"0.02129`\\\", \\\",\\\", \\\"0.02137`\\\", \\\",\\\", \
\\\"0.02145`\\\", \\\",\\\", \\\"0.02153`\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"14\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
\\\"0.02273`\\\", \\\",\\\", \\\"0.02281`\\\", \\\",\\\", \\\"0.02289`\\\", \
\\\",\\\", \\\"0.022969999999999997`\\\", \\\",\\\", \\\"0.02305`\\\", \
\\\",\\\", \\\"0.023129999999999998`\\\", \\\",\\\", \
\\\"0.023209999999999998`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"Log\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"}\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"]\\\"}], \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]]}]\\)\[NoBreak] has evaluated to non-numerical values for all \
sampling points in the region with boundaries \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.02097`\
\\\", \\\",\\\", \\\"0.023209999999999998`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.725193852809627*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\\*RowBox[{\\\"2493.389252508954`\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\
\"1.9531249999999996`*^7\\\"}], \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.02225`\\\"}], \\\"+\\\", \\\"\[Omega]\\\"}], \
\\\")\\\"}], \\\"2\\\"]}], RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], RowBox[{RowBox[{\\\"Interpolation\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0.02097`\\\", \\\",\\\", \
\\\"0.02105`\\\", \\\",\\\", \\\"0.02113`\\\", \\\",\\\", \\\"0.02121`\\\", \
\\\",\\\", \\\"0.02129`\\\", \\\",\\\", \\\"0.02137`\\\", \\\",\\\", \
\\\"0.02145`\\\", \\\",\\\", \\\"0.02153`\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"14\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
\\\"0.02273`\\\", \\\",\\\", \\\"0.02281`\\\", \\\",\\\", \\\"0.02289`\\\", \
\\\",\\\", \\\"0.022969999999999997`\\\", \\\",\\\", \\\"0.02305`\\\", \
\\\",\\\", \\\"0.023129999999999998`\\\", \\\",\\\", \
\\\"0.023209999999999998`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"Log\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"}\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"]\\\"}], \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]]}]\\)\[NoBreak] has evaluated to non-numerical values for all \
sampling points in the region with boundaries \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.02097`\
\\\", \\\",\\\", \\\"0.023209999999999998`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.725193852866304*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\\*RowBox[{\\\"2493.389252508954`\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\
\"1.9531249999999996`*^7\\\"}], \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.02225`\\\"}], \\\"+\\\", \\\"\[Omega]\\\"}], \
\\\")\\\"}], \\\"2\\\"]}], RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], RowBox[{RowBox[{\\\"Interpolation\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0.02097`\\\", \\\",\\\", \
\\\"0.02105`\\\", \\\",\\\", \\\"0.02113`\\\", \\\",\\\", \\\"0.02121`\\\", \
\\\",\\\", \\\"0.02129`\\\", \\\",\\\", \\\"0.02137`\\\", \\\",\\\", \
\\\"0.02145`\\\", \\\",\\\", \\\"0.02153`\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"14\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
\\\"0.02273`\\\", \\\",\\\", \\\"0.02281`\\\", \\\",\\\", \\\"0.02289`\\\", \
\\\",\\\", \\\"0.022969999999999997`\\\", \\\",\\\", \\\"0.02305`\\\", \
\\\",\\\", \\\"0.023129999999999998`\\\", \\\",\\\", \
\\\"0.023209999999999998`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"Log\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"}\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"]\\\"}], \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]]}]\\)\[NoBreak] has evaluated to non-numerical values for all \
sampling points in the region with boundaries \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.02097`\
\\\", \\\",\\\", \\\"0.023209999999999998`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.725193852932042*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\\*RowBox[{\\\"2493.389252508954`\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\
\"1.9531249999999996`*^7\\\"}], \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.02225`\\\"}], \\\"+\\\", \\\"\[Omega]\\\"}], \
\\\")\\\"}], \\\"2\\\"]}], RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], RowBox[{RowBox[{\\\"Interpolation\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0.02097`\\\", \\\",\\\", \
\\\"0.02105`\\\", \\\",\\\", \\\"0.02113`\\\", \\\",\\\", \\\"0.02121`\\\", \
\\\",\\\", \\\"0.02129`\\\", \\\",\\\", \\\"0.02137`\\\", \\\",\\\", \
\\\"0.02145`\\\", \\\",\\\", \\\"0.02153`\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"14\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
\\\"0.02273`\\\", \\\",\\\", \\\"0.02281`\\\", \\\",\\\", \\\"0.02289`\\\", \
\\\",\\\", \\\"0.022969999999999997`\\\", \\\",\\\", \\\"0.02305`\\\", \
\\\",\\\", \\\"0.023129999999999998`\\\", \\\",\\\", \
\\\"0.023209999999999998`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"Log\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"}\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"]\\\"}], \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]]}]\\)\[NoBreak] has evaluated to non-numerical values for all \
sampling points in the region with boundaries \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.02097`\
\\\", \\\",\\\", \\\"0.023209999999999998`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.72519385298779*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"NormPosteriorBBN\[Omega]", ",", "NormPosteriorBBNBAD\[Omega]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormPosteriorBBN\[Omega]", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"PosteriorRawBBN\[Omega]", "[", "\[Omega]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
        RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
        RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormPosteriorBBNBAD\[Omega]", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"PosteriorRawBBNBAD\[Omega]", "[", "\[Omega]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
        RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
        RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.720857762716667*^9, 3.7208578070993023`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Posterior\[Omega]", "[", "\[Omega]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"PosteriorRaw\[Omega]", "[", "\[Omega]", "]"}], "/", 
   "NormPosterior\[Omega]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PosteriorBAD\[Omega]", "[", "\[Omega]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"PosteriorRawBAD\[Omega]", "[", "\[Omega]", "]"}], "/", 
    "NormPosteriorBAD\[Omega]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PosteriorBBN\[Omega]", "[", "\[Omega]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"PosteriorRawBBN\[Omega]", "[", "\[Omega]", "]"}], "/", 
   "NormPosteriorBBN\[Omega]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PosteriorBBNBAD\[Omega]", "[", "\[Omega]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"PosteriorRawBBNBAD\[Omega]", "[", "\[Omega]", "]"}], "/", 
   "NormPosteriorBBNBAD\[Omega]"}]}]}], "Input",
 CellChangeTimes->{{3.7201841190841513`*^9, 3.720184172109394*^9}, {
   3.720186477203744*^9, 3.7201864904658413`*^9}, {3.720434491351212*^9, 
   3.720434498284884*^9}, {3.7207714710376997`*^9, 3.720771502098003*^9}, {
   3.7207897095042973`*^9, 3.7207897127210093`*^9}, {3.720856415768182*^9, 
   3.720856458305004*^9}, {3.720857011049943*^9, 3.720857013051805*^9}, {
   3.720857359918045*^9, 3.720857364978931*^9}, {3.72085775914152*^9, 
   3.7208577858012867`*^9}, {3.720857817495035*^9, 3.72085783840851*^9}, 
   3.720859126671323*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Posterior\[Omega]", "[", "\[Omega]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", 
     RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
      RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
     RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
      RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7208570160223913`*^9, 3.720857017663465*^9}, {
  3.7208573199033213`*^9, 3.720857369478537*^9}, {3.720959077042241*^9, 
  3.7209590875379*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.021, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.02097, 0.023209999999999998`}, {0., 2922.1906072896063`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.720859075947584*^9, 3.720859128002411*^9, 3.720862763289578*^9, 
   3.7208668495816507`*^9, 3.7209188664387283`*^9, 3.720937355438785*^9, 
   3.720937765282798*^9, 3.720938697745082*^9, 3.720938816675935*^9, 
   3.720939187807073*^9, 3.7209590235667458`*^9, {3.7209590728163157`*^9, 
   3.7209591072072477`*^9}, {3.720959422236272*^9, 3.720959434982688*^9}, 
   3.720959565619879*^9, {3.720974519633095*^9, 3.720974533205489*^9}, 
   3.720974580537237*^9, 3.720974653515881*^9, 3.721103662532506*^9, 
   3.7213950922385178`*^9, 3.7214041448209333`*^9, 3.7215040782400227`*^9, 
   3.721504212009036*^9, 3.721544892586461*^9, 3.722086543189699*^9, 
   3.722148171955585*^9, 3.722148622398979*^9, 3.7225715862635183`*^9, 
   3.722667506134495*^9, 3.7226675566332293`*^9, 3.7228459036744623`*^9}]
}, Open  ]],

Cell["Means and standard deviations", "Text",
 CellChangeTimes->{{3.72266756267769*^9, 3.722667569750539*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MeanPosteriorBBN\[Omega]", "=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"\[Omega]", " ", 
     RowBox[{"PosteriorBBN\[Omega]", "[", "\[Omega]", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]", ",", 
      RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
       RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
      RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
       RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SigmaPosteriorBBN\[Omega]", "=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", "-", "MeanPosteriorBBN\[Omega]"}], ")"}], "^", 
       "2"}], " ", 
      RowBox[{"PosteriorBBN\[Omega]", "[", "\[Omega]", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
        RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
        RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.721404109069085*^9, 3.72140412197292*^9}}],

Cell[BoxData["0.021903428390831536`"], "Output",
 CellChangeTimes->{3.721404145764073*^9, 3.7215042209944487`*^9, 
  3.7215448936433477`*^9, 3.722086544575231*^9, 3.7221481741243553`*^9, 
  3.7221486229687233`*^9, 3.722571587387356*^9, 3.722667557820806*^9, 
  3.722845907513331*^9}],

Cell[BoxData["0.0002502092976453757`"], "Output",
 CellChangeTimes->{3.721404145764073*^9, 3.7215042209944487`*^9, 
  3.7215448936433477`*^9, 3.722086544575231*^9, 3.7221481741243553`*^9, 
  3.7221486229687233`*^9, 3.722571587387356*^9, 3.722667557820806*^9, 
  3.722845907593397*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MeanPosterior\[Omega]", "=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"\[Omega]", " ", 
     RowBox[{"Posterior\[Omega]", "[", "\[Omega]", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]", ",", 
      RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
       RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
      RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
       RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SigmaPosterior\[Omega]", "=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", "-", "MeanPosterior\[Omega]"}], ")"}], "^", "2"}],
       " ", 
      RowBox[{"Posterior\[Omega]", "[", "\[Omega]", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
        RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
        RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7201840624547033`*^9, 3.720184104078156*^9}, {
   3.720184230866991*^9, 3.7201842325089197`*^9}, {3.720186508681282*^9, 
   3.720186520953841*^9}, {3.720434535443674*^9, 3.720434560650755*^9}, {
   3.7207897178289347`*^9, 3.7207897259284267`*^9}, {3.720789766983879*^9, 
   3.720789768127344*^9}, 3.720790335996717*^9, {3.720856461366777*^9, 
   3.720856492157053*^9}, {3.7208572337222157`*^9, 3.7208572341948442`*^9}}],

Cell[BoxData["0.022150228973747944`"], "Output",
 CellChangeTimes->{{3.72085722925587*^9, 3.7208572391931562`*^9}, 
   3.720857272053342*^9, 3.7208573758205357`*^9, 3.720859076164*^9, 
   3.720859130056382*^9, 3.720862764191937*^9, 3.720866850382868*^9, 
   3.720918867797176*^9, 3.7209373615597277`*^9, 3.720937766013726*^9, 
   3.7209386986419363`*^9, 3.72093881762241*^9, 3.720939188367873*^9, 
   3.720959024562508*^9, 3.720959073588265*^9, 3.7209591251012506`*^9, 
   3.7209595686657267`*^9, 3.7209746589604073`*^9, 3.721103664028833*^9, 
   3.721395093141958*^9, 3.7214041947315702`*^9, 3.721504222951995*^9, 
   3.721544894232972*^9, 3.722086552039769*^9, 3.722148177314816*^9, 
   3.722148623393983*^9, 3.722571587959021*^9, 3.72266755941409*^9, 
   3.7228459115463343`*^9}],

Cell[BoxData["0.00013645457781138657`"], "Output",
 CellChangeTimes->{{3.72085722925587*^9, 3.7208572391931562`*^9}, 
   3.720857272053342*^9, 3.7208573758205357`*^9, 3.720859076164*^9, 
   3.720859130056382*^9, 3.720862764191937*^9, 3.720866850382868*^9, 
   3.720918867797176*^9, 3.7209373615597277`*^9, 3.720937766013726*^9, 
   3.7209386986419363`*^9, 3.72093881762241*^9, 3.720939188367873*^9, 
   3.720959024562508*^9, 3.720959073588265*^9, 3.7209591251012506`*^9, 
   3.7209595686657267`*^9, 3.7209746589604073`*^9, 3.721103664028833*^9, 
   3.721395093141958*^9, 3.7214041947315702`*^9, 3.721504222951995*^9, 
   3.721544894232972*^9, 3.722086552039769*^9, 3.722148177314816*^9, 
   3.722148623393983*^9, 3.722571587959021*^9, 3.72266755941409*^9, 
   3.722845911634606*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MeanPosteriorBAD\[Omega]", "=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"\[Omega]", " ", 
     RowBox[{"PosteriorBAD\[Omega]", "[", "\[Omega]", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]", ",", 
      RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
       RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
      RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
       RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SigmaPosteriorBAD\[Omega]", "=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", "-", "MeanPosteriorBAD\[Omega]"}], ")"}], "^", 
       "2"}], " ", 
      RowBox[{"PosteriorBAD\[Omega]", "[", "\[Omega]", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
        RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
        RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7201840624547033`*^9, 3.720184104078156*^9}, {
   3.720184230866991*^9, 3.7201842325089197`*^9}, {3.720186508681282*^9, 
   3.720186520953841*^9}, {3.720434535443674*^9, 3.720434560650755*^9}, {
   3.7207897178289347`*^9, 3.7207897259284267`*^9}, {3.720789766983879*^9, 
   3.720789768127344*^9}, 3.720790335996717*^9, {3.720856461366777*^9, 
   3.720856519854849*^9}, {3.720857275797888*^9, 3.720857276574761*^9}}],

Cell[BoxData["0.02216503127809562`"], "Output",
 CellChangeTimes->{{3.7208572727409487`*^9, 3.7208572815336523`*^9}, 
   3.720857376451408*^9, 3.720859076415473*^9, 3.7208591313027773`*^9, 
   3.720862765050161*^9, 3.720866850971129*^9, 3.720918872934113*^9, 
   3.7209373687405453`*^9, 3.720937766630575*^9, 3.72093869969867*^9, 
   3.72093881808176*^9, 3.720939188802122*^9, 3.720959025313542*^9, 
   3.720959126705943*^9, 3.720959569610571*^9, 3.720974659664598*^9, 
   3.721103666064883*^9, 3.721395093859522*^9, 3.7214042127184687`*^9, 
   3.721504223993615*^9, 3.721544894891374*^9, 3.722086553061428*^9, 
   3.7221481781585817`*^9, 3.722148623909296*^9, 3.722571588607699*^9, 
   3.7226675737502623`*^9, 3.722845921027103*^9}],

Cell[BoxData["0.00013712714598412368`"], "Output",
 CellChangeTimes->{{3.7208572727409487`*^9, 3.7208572815336523`*^9}, 
   3.720857376451408*^9, 3.720859076415473*^9, 3.7208591313027773`*^9, 
   3.720862765050161*^9, 3.720866850971129*^9, 3.720918872934113*^9, 
   3.7209373687405453`*^9, 3.720937766630575*^9, 3.72093869969867*^9, 
   3.72093881808176*^9, 3.720939188802122*^9, 3.720959025313542*^9, 
   3.720959126705943*^9, 3.720959569610571*^9, 3.720974659664598*^9, 
   3.721103666064883*^9, 3.721395093859522*^9, 3.7214042127184687`*^9, 
   3.721504223993615*^9, 3.721544894891374*^9, 3.722086553061428*^9, 
   3.7221481781585817`*^9, 3.722148623909296*^9, 3.722571588607699*^9, 
   3.7226675737502623`*^9, 3.722845921115*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"\[Omega]", " ", 
    RowBox[{"PosteriorBBN\[Omega]", "[", "\[Omega]", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", 
     RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
      RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
     RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
      RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.720867115129895*^9, 3.7208671164716682`*^9}}],

Cell[BoxData["0.021903428390831536`"], "Output",
 CellChangeTimes->{3.7208671169299803`*^9, 3.72087706563628*^9, 
  3.720918880175414*^9, 3.720937373721414*^9, 3.720937767363826*^9, 
  3.7209387005703897`*^9, 3.720939189329258*^9, 3.720959026638093*^9, 
  3.7209591278711863`*^9, 3.720959570442501*^9, 3.720974661088126*^9, 
  3.7211036674886713`*^9, 3.721395094809597*^9, 3.721404220630752*^9, 
  3.721504225085348*^9, 3.721544895443084*^9, 3.722086554484054*^9, 
  3.722148180802485*^9, 3.722148624379696*^9, 3.7225715893280363`*^9, 
  3.7226675748549767`*^9, 3.7228459754964323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Max\[Omega]", "=", 
  RowBox[{
   RowBox[{"FindMaximum", "[", 
    RowBox[{
     RowBox[{"Posterior\[Omega]", "[", "\[Omega]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
        RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
        RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1", ",", "2"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MaxBBN\[Omega]", "=", 
  RowBox[{
   RowBox[{"FindMaximum", "[", 
    RowBox[{
     RowBox[{"PosteriorBBN\[Omega]", "[", "\[Omega]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
        RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
        RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1", ",", "2"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MaxBAD\[Omega]", "=", 
  RowBox[{
   RowBox[{"FindMaximum", "[", 
    RowBox[{
     RowBox[{"PosteriorBAD\[Omega]", "[", "\[Omega]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
        RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
        RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1", ",", "2"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MaxBBNBAD\[Omega]", "=", 
  RowBox[{
   RowBox[{"FindMaximum", "[", 
    RowBox[{
     RowBox[{"PosteriorBBNBAD\[Omega]", "[", "\[Omega]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
        RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
       RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
        RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7209379465151367`*^9, 3.720938012744177*^9}, {
  3.721103694781645*^9, 3.721103697836759*^9}}],

Cell[BoxData["0.022148756152049004`"], "Output",
 CellChangeTimes->{{3.720937960903515*^9, 3.72093801332703*^9}, 
   3.720938316257888*^9, 3.720938701602593*^9, 3.720939189859186*^9, 
   3.720959028431204*^9, 3.7209591288272333`*^9, 3.720959163155876*^9, 
   3.720959571356632*^9, 3.7209746618313847`*^9, 3.721103668335844*^9, 
   3.721103698664613*^9, 3.7213950953109093`*^9, 3.7214042215245953`*^9, 
   3.721504226101528*^9, 3.721544895884734*^9, 3.722086555010992*^9, 
   3.7221481815859957`*^9, 3.722148624848164*^9, 3.722571589780959*^9, 
   3.722667575763401*^9, 3.722845976869804*^9}],

Cell[BoxData["0.0218956212304312`"], "Output",
 CellChangeTimes->{{3.720937960903515*^9, 3.72093801332703*^9}, 
   3.720938316257888*^9, 3.720938701602593*^9, 3.720939189859186*^9, 
   3.720959028431204*^9, 3.7209591288272333`*^9, 3.720959163155876*^9, 
   3.720959571356632*^9, 3.7209746618313847`*^9, 3.721103668335844*^9, 
   3.721103698664613*^9, 3.7213950953109093`*^9, 3.7214042215245953`*^9, 
   3.721504226101528*^9, 3.721544895884734*^9, 3.722086555010992*^9, 
   3.7221481815859957`*^9, 3.722148624848164*^9, 3.722571589780959*^9, 
   3.722667575763401*^9, 3.722845976874632*^9}],

Cell[BoxData["0.022163235521435433`"], "Output",
 CellChangeTimes->{{3.720937960903515*^9, 3.72093801332703*^9}, 
   3.720938316257888*^9, 3.720938701602593*^9, 3.720939189859186*^9, 
   3.720959028431204*^9, 3.7209591288272333`*^9, 3.720959163155876*^9, 
   3.720959571356632*^9, 3.7209746618313847`*^9, 3.721103668335844*^9, 
   3.721103698664613*^9, 3.7213950953109093`*^9, 3.7214042215245953`*^9, 
   3.721504226101528*^9, 3.721544895884734*^9, 3.722086555010992*^9, 
   3.7221481815859957`*^9, 3.722148624848164*^9, 3.722571589780959*^9, 
   3.722667575763401*^9, 3.722845976878455*^9}],

Cell[BoxData["0.021940359788692843`"], "Output",
 CellChangeTimes->{{3.720937960903515*^9, 3.72093801332703*^9}, 
   3.720938316257888*^9, 3.720938701602593*^9, 3.720939189859186*^9, 
   3.720959028431204*^9, 3.7209591288272333`*^9, 3.720959163155876*^9, 
   3.720959571356632*^9, 3.7209746618313847`*^9, 3.721103668335844*^9, 
   3.721103698664613*^9, 3.7213950953109093`*^9, 3.7214042215245953`*^9, 
   3.721504226101528*^9, 3.721544895884734*^9, 3.722086555010992*^9, 
   3.7221481815859957`*^9, 3.722148624848164*^9, 3.722571589780959*^9, 
   3.722667575763401*^9, 3.722845976882977*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PosteriorPlot\[Omega]", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Posterior\[Omega]", "[", "\[Omega]", "]"}], "/", 
       RowBox[{"Posterior\[Omega]", "[", "Max\[Omega]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"PosteriorBBN\[Omega]", "[", "\[Omega]", "]"}], "/", 
       RowBox[{"PosteriorBBN\[Omega]", "[", "MaxBBN\[Omega]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"PostCMB", "[", "\[Omega]", "]"}], "/", 
       RowBox[{"PostCMB", "[", "Meanh2\[CapitalOmega]b0", "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{
        RowBox[{"PosteriorBAD\[Omega]", "[", "\[Omega]", "]"}], "/", 
        RowBox[{"PosteriorBAD\[Omega]", "[", "MaxBAD\[Omega]", "]"}]}], ",", 
       RowBox[{
        RowBox[{"PosteriorBBNBAD\[Omega]", "[", "\[Omega]", "]"}], "/", 
        RowBox[{
        "PosteriorBBNBAD\[Omega]", "[", "MaxBBNBAD\[Omega]", "]"}]}]}], 
      "*)"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]", ",", 
      RowBox[{"Meanh2\[CapitalOmega]b0", "-", 
       RowBox[{"8", "\[Sigma]h2\[CapitalOmega]b0"}]}], ",", 
      RowBox[{"Meanh2\[CapitalOmega]b0", "+", 
       RowBox[{"6", "\[Sigma]h2\[CapitalOmega]b0"}]}]}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "Meanh2\[CapitalOmega]b0", "-", "\[Sigma]h2\[CapitalOmega]b0"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "@", "Gray"}], ",", "Thick"}], "}"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "Meanh2\[CapitalOmega]b0", "+", "\[Sigma]h2\[CapitalOmega]b0"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "@", "Gray"}], ",", "Thick"}], "}"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"MeanPosterior\[Omega]", "-", "SigmaPosterior\[Omega]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "@", "Gray"}], ",", "Thick", ",", "Dashed"}], 
            "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"MeanPosterior\[Omega]", "+", "SigmaPosterior\[Omega]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "@", "Gray"}], ",", "Thick", ",", "Dashed"}], 
            "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Black", ",", "Dashed"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dotted"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Darker", "@", 
         RowBox[{"Darker", "@", "Green"}]}], "}"}], ",", 
       RowBox[{"{", "Blue", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \
\(b\)]\)\!\(\*SuperscriptBox[\(h\), \(2\)]\)\>\"", ",", 
       "\"\<P(\!\(\*SubscriptBox[\(\[CapitalOmega]\), \
\(b\)]\)\!\(\*SuperscriptBox[\(h\), \(2\)]\))/\!\(\*SubscriptBox[\(P\), \(max\
\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "12"}], "}"}]}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Thickness", "[", "0.004", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Plots/PosteriorPlotw.pdf\>\"", ",", 
    RowBox[{"Style", "[", 
     RowBox[{"PosteriorPlot\[Omega]", ",", 
      RowBox[{"Magnification", "\[Rule]", "1"}]}], "]"}], ",", 
    "\"\<PDF\>\""}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7201839447541647`*^9, 3.720183971945054*^9}, {
   3.720184468895906*^9, 3.7201846706326637`*^9}, {3.720184798738668*^9, 
   3.720184822375771*^9}, {3.720184866599905*^9, 3.7201849529667587`*^9}, {
   3.720185003831799*^9, 3.720185017871046*^9}, {3.720185092794076*^9, 
   3.7201851266031427`*^9}, {3.7201865284406137`*^9, 3.720186543556282*^9}, {
   3.720187326651154*^9, 3.720187364923811*^9}, {3.72018741957798*^9, 
   3.72018742924053*^9}, 3.7202496041989594`*^9, {3.7207900261136913`*^9, 
   3.72079002844175*^9}, {3.720790091443447*^9, 3.720790094986087*^9}, {
   3.720790241449667*^9, 3.7207902415619793`*^9}, {3.720856524549905*^9, 
   3.72085656026628*^9}, {3.720857288547209*^9, 3.7208572898866243`*^9}, {
   3.720857852258397*^9, 3.720857907070992*^9}, {3.720859147071947*^9, 
   3.720859241534897*^9}, {3.7208593262591*^9, 3.720859326538808*^9}, {
   3.720862770147092*^9, 3.7208627829160757`*^9}, {3.720863158862816*^9, 
   3.720863172315423*^9}, {3.7208668584536667`*^9, 3.720866895306717*^9}, {
   3.720866982463771*^9, 3.720867024130363*^9}, {3.720867147139629*^9, 
   3.720867168040139*^9}, {3.7208770357541523`*^9, 3.7208770499293623`*^9}, {
   3.7209189211441708`*^9, 3.7209189313743343`*^9}, {3.720937383009955*^9, 
   3.720937391046928*^9}, {3.720937681693762*^9, 3.7209376922793293`*^9}, {
   3.720937771219532*^9, 3.7209377819863653`*^9}, {3.7209380186270723`*^9, 
   3.7209380683727007`*^9}, {3.720938122566084*^9, 3.720938295022444*^9}, {
   3.720938354191416*^9, 3.72093835588074*^9}, {3.720938719045231*^9, 
   3.720938761093075*^9}, {3.721103709998679*^9, 3.7211037122697563`*^9}, 
   3.7213927550113564`*^9, {3.721504244211397*^9, 3.721504262389453*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     Dashing[{Small, Small}], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     Dashing[{0, Small}], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0, 
      NCache[
       Rational[4, 9], 0.4444444444444444], 0], AbsoluteThickness[1.6], 
     Opacity[1.], LineBox[CompressedData["
1:eJwU2Hk4VV0XAHAVJRTJ3KCIMoRMIWcvFYpSoiTzWDIWZQovkpRM1b1XCCEk
hQiVzKKSkJApU2ZuAw0i3/r+8vyec557ztl77TXYaudh5LichYXlAisLy///
Xhu9ObDDjwYvH85qng3johzOyi+YoB08xD/5XF5Dkcm3AlfQJ+wUXulHrqW+
z7AeHkDXqocW7zbnoRrP3TvN7U+Dnxtr1BWmeais71QIhfbSDzogHbaOsvjp
XXwHbbuuhbRU8VKqvutb6tFN1YNfOp3WU+vm8ybn0Ac3ROUw+PmoV4tjW4wu
0eCZ5BeWZSH8lAKbeSRHAA2uu5rxHLkvRHFc/XVfDb2OJWHP+/+EqS/stytP
o3mHAiqqbEWoBK53c9Xo6I4M9gXNjdSF6LM839DH6FdLX6tuoo7wrJQRDaQB
/Y/bMz71zdQKPrC5hD6WrJgvLruF6qN1+z9AB6utLBx6voUqFfSldaDfnulo
8T+ylXLdUPBGKQh//wbL57YwMapdTFxlCr2757+H65UkqPyMiqMi/9HgyYZp
JetpCSpS0sL5IHrFMrVzs48kKS1pWkoG2q49cd+HfTsokdxdz1vR0btf994Q
lKLmdja1sQTTYGhbs/G5H1JUzq5VHJboGAs4/6BKhgorTN8WiXYwincMKpKl
rFW04BnaR0ubeSlvJ8Wn7neBP4QGkgVjT1ZWyFOBWpN979Bkke+thqQiZVp9
9c9f9AWp78kGtYqUovY2PulQGrTezqt+cEaJGjlgqReO/rb1nNK3cmWq8vUf
+yI08bn2Ut1LhUo8RA8aRLttVpYK36lKGR59X0gu0+Cvbx//z6LdlHSLS5Mr
+qGPuvPlUDWKzZh9PAGdRHOxHTNRp56b7N38C82dx79+C/8eaptVYUReGNo/
4jbLDKHsvPnDBtDR7mwcE6u0qJRon//WX6FB6JZQIY5kLUqkYo+3D/p4sJPa
w669lGnH3fMP0HNe4T4xIfsoGnPJtRut9ZEeeE5uP8WzpdYewmkw670ja3mi
NnVETdL6PPpmlZSThLkOFWkYYZaOVl7GPLRDTJdaGXL42KqrNHCWej9aX3eA
WhxoI+/RKob+JS+cD1Ea86oayyJoEPjKn0X07GHKl/eOihL6pI9QS+w5A2p2
n6UsA+3fO9c2kniUUjSv2P4anbim4bmGjSHl4bVV/C+6rtirrfCXITWR/kXY
+hoNwiMWj/1UNaJ2lB3gj0Ob7DSV3/rZiHJse8BTg85Ye3tYK8qY6md1X7X9
Og38TAOSlBeOU+2OP2dn0OOfVsnIyZhSfEGmX7dE4vnaxTarvPoUdYz+fNII
bSLeF7uWeYpqfBU0WIxW/5Zy/dgHc4rjc3/vGFr88ln/w60W1IFf+z6J3KCB
Ua/WDarLkqrevqo5CJ0zYh+1ZYUNxaJ19m0+uip9aSaAZkNRpm9fDaK322+t
mJe1pUojYl7qRtFgOvRKM4+rHZU3LvhwbTQNztS9qv0j70hNLfPP1EL/Nxxc
lfPVkZIW6bnnif66ex9zfelpKlM/Nb4dzXnp3+YFcydq2G75bfYYGqg19pT/
VDtLbb3kEKOBnhfcMJ26yZlKergjPBktcuIIjXfJheqquR7SjN4248B1ZsGV
EuyZClgei9efKiheWe5O3eQq8DqNTtlqHCPFf46KcFO3lYujgazLXr8kX09K
pecRlyV6dslluGi9FzWoL1YaiZa+Zqb4ttCL0tzByT2O1o2a+nVrxUVqnP7f
c8GbNKisbWlPKLxI0dlmHXXRL4Ou+h886019HewpS0dHRM3FHR3xoe4eO+bU
it704K0R+2NfSr+ybv2yWzRYkEuOkAzwozLuPna2Qt8Pzve3k71EnTQNFhK+
TYNhLqcHvYNBFGv9bM0BtDdH6XjZ0H9UvspZD280VcDb5+gdTHGsN3r1Aa1u
pj8ON0KokpBX55fTaNC87/qyjk2hlMNXjU270DOrOvvWFoVS5e/EL0SjHf77
kDI3c5ly0YwXfYkuuq1f8u1WGCX0kOvtJNp+qo5LilyhPCPmturR8fohlo3f
0sIpyf3171cwaLBrXsK27sk16kPBnkuK6E5V48Lz4dep4C35krbozPiqjLc2
kVTXYnxgOdrtkegRS+ko6qrrGqlp9IiPY9gKkWhKuTukbUM85lOH9R7K62Ko
6FJnGT90xltuoVuRsdSe7Z/bs9Crp6Ne7FofR43RjEPb0WWBt3bzpsRR+7w0
PyndoYGVoNgL0dqb1M+da6/OoDUGirlND9Co9KRQxU0JNHhadG5+fJZGGXL+
6j2E5v62O2s0i07ljH1WfoCO+8HQbdkcT508eby/Ay1w+MgM/1A8xfqqIXJl
Ig3qA6589Hl0h7JKLxi0R7fdWSozPpFIcfJKRt9Ep795d3mXUhJVGpygXoUO
iXsiOyt4l+K1uhy7OYkGt1K4vFh+JVN1QifIJ/Sv6tt+LyPuUYo/XJdW3qXB
ZdH8zsj1aVTqu7BKZbTtptb+6LQ0KiC0aF8sWupOxvXCd+nUhEXjinL0cRuq
VdA5gzq5e7h2El3oBhtVOe9TilPrDxxIpkHDn02DChaZVOorGfaL6NAPPjym
XFnUmnv7X6ehu3NOPG2qyqLGTngd+of+p5Y7fYh6QCVXtB59mkKDnS5555Uu
5VJcCRM8Q2j7lIB1AWaPKL8Ly1t5UmnQd3NcykfrMXVcSvG4K1q5+HlRFk8+
Vb1Cnz8BfXftcI1+dD6l0GfbXo+2lmBdl89dQHHeijMVv4f588hsq+LmJ5Sv
2wPhY2gp2+OrIh8+wXpU1RWElq9xZd1AFVLVC18tutB6L1X1bd2KKN/ThrZx
aTQ4wLh4TGllCTWi5SRWgbYMXS/3tbSEMt4QPDSFPtLVEvz3XCkl15zneDAd
z4+Dom3St2fUF3Vu5yX0odDEQynqLykjvu0yOzNocLvu4TObDeVU5QyZMkOP
zFpJvFtRQSWlu7sXoz9KHnxZfKGSMlrT5Ol2H+vVzwsfa8OrqcrRL0qJaIfy
fcUy/DXUzurF2Qb04vR/1VVZNRS7z06fbZk06JWo2/frUy1V3n/jUjc6YsK6
cqN3PSX7IkNzdRa+X7uozA2pBuoOrWxRFf1pZ6ChxmADdUF/6r+baNb4dzBt
/4aSKToUppeN788eZLrt0TtqYZuU5CV04tPbQ2fTmqhG2sqGXPRemcuH3FPe
U+4+VZw8DzDeHx0Q+NjZTJGx5Ed70WMG/2rz7Vso7lMBR73QFRec2ya/t1D5
GrtvtaOXF3G+5xD9QIU85FNhz8H68udgoWrZB8po4/d2dfSajOk/x6zaqB+L
uSJ30XI9Q/XfCz5SqlViafYPaRBweHO7Q2IntUqRRZuG3hwEaZEOn6jOtN4v
r9A98JlnXqmL8guLl5LOpcGV3ZP7vUa6Kf25i2/N0YalHm7Dr3sokdPGblHo
s8Fews5FvVTZgbUFX9HNik8HY1M+U1Glk0ZijzD/veK/bmTYT1lJvZ41Rr8v
92btauunljjC1ErQZpoJry0nBqh9TX8qAh/T4OjljYMf9Yep9dBhm4cWGB8x
HpwZpobzilYMoFWMQyv+Mb5QV+I8Dmjn0eC05K0XrPMjlMlyg/GLaJUw5UYo
HKUkvaQjs9AOG8dHd3qOUQ3HvzRx5GM9uKdb9GHZBHWnrvqcJlq3U6Z7pHWC
clZN5XVHC2b4cjnkTFKcQuYmLej4LzvD7dymqSPdzb2MAqzHV36vomd8pUQP
P/7vNXowX132ntQ36mtZ5Na/aB8xUf4XT75Rccm6jlZPMF6XS+UwWr5Tdtzb
VsWi1yZHfEg484NSDF72oAq99xXn653LZ6k227KpbYVYnxU9bkXrzFH3W+9E
m6AVz67JzZiZo7z3+yhEoM+HvJPsTvpJCUooXphEb9R5HKaz+jdlNpb1t6CI
Bi3fk77QJP9SCXkMg350h+eTyOyZv1SX99WUtU9pIAb/+ZuVLVBmbGf2u6Bb
C0VHNc7+o8zFJCO3FWP/YiGbWrlyGUka5+81Qjsn3CJRl5eRnnw2+RB09V3B
jPYVy4kFfGntRZfd9rm3l3sFsbDIEGGU0GB92c7T+sfZSJL4bdc6tK504N83
TDbSM3G5/Afa0Dq/4m7MSmLhZ29nWIrrVzVk+aRnFbGki+Wsfob79TV7iief
gyRb8i7sRj/Waimjn+ckfduWHzmNTnlQ4XFRjYtYFQ58q0a7Dg9Xt7SvIVbN
qeoBz2nAtvdGhsQjHpLMiI3MQSvwxQW4SKwjfVbBvZ1o5wM6+5ZS1xGraesQ
lReYr3RbHrik8RJrDtHXM+jfhrUyv5r5SGrL2g2byrAfazNrOnCan/TH/3M9
hO7ijrifu8RPbLb38WSjM4T188RAkNho3zW1fUmDD52u//36IUxSOaNyYtA+
UcEnNj4SIf2tAQsv0Vp/eS4fdNlAbGwtUkXKabBMkLUZfm0ktkEbxj6gpVdO
n3y3YwtJ0+HUWF6B/f/x2EueiVvIINffSAX0CsudsgrrthK7xC75KPT0+qN/
D64UI3ald3x0K7HeHwySPyW8jbAJHM3xRZ9xdjVQKtxGsr1Ye3PQg3lbbkUc
kyBMOY993FVYH7Vq7bYnSZKA+9prOtF3L1/5tuAqRURXzANHNca7UdOB83LS
pNomz1MT7ZxdPRk0J01WbxTpTEXLCPd6sNNkCf0mM+1sDQ3K34xN7uVWIOpf
Mz4movcretg/jVAgPQZm7E3o0LTf3zPZdhHx1XVuirWY37w4p5w4FEn+fwlq
f9G3yNCGo/uUiXHvUZeddTjf/q3Np3Upk58abMnW6Pyc+0KqPiqE+umxohYd
k7LxPUu5KnnjqtN04xUNTHu6rh+/ok7c3syzVPzfm3Sm5/drEJ4d+Urf0O84
VFs42PeQk0Mid07U0+Dwy8kPLPc0yfCpr/abGzC+T/ZvNlujRa6W3KcboudX
M5WuhmkRaX7z16HoiXTjlzxLWuR8c53cKPp6tO8fxr+95J9u4p+811hfnmT7
K0prk3sZhrKD6A9rpi7Ml2sT7eUrrfne0CB288nE6ZM6JPLluVpfdFJkoewb
ui4RUtaN2fuWBnnhKfbPDumRsri/VV7oeyNXihTZ9Ik1M3/2PjpGNebuxxp9
kpmzwYyjEfvzeyUN248dJkpbv237gF7QVuoVzT9K6BN6bqzvsH7tYnRY6RmS
+cK0pyro43MOPytfGpJq3eO68WjGLRlp3vxjxMi15IxlEw2LQfqYwUtjUqzC
kx+NvtR5ODhe7zgRWXL6XYFmdRWxffjpOBmME7km9h73QyS6LobNhHiWBOaM
ovV+bNiqFWNK2oPbvws108BgX0PjU81TRENffo8+urS4rL555hRZ3tv/Nhfd
fn7qraetOYlbrj19vgXPi/9zpd+Xrcjs2ySV9Jb/9wPvrbaZWRNT2lxgGzrM
cfrusg02ZMuOrLW7W2lwTuurcOmSDck34FBYQIv9bj6ZN2NH+ATtfXd+wPm6
zvBLqac98e1/UWmF9rdwK4F5e6Ll5XasCj3R/5h7K58jeR/f7BneRgOJ2nub
2y+eIYp2Ui9K0NLhs6lnhZwIXSZ0xTj6hMr5O3srnIhVudLtQx+x32BnBsuJ
OJOZIfpTnnYa+H514FVgdyNGj5iLe9FjQvsfCjS7kWLvg7pe6EfHrrgq3XUn
Qavn2z+i84ZjTN6KnyNr5S1/J3RgvezMG/T8ep54/n6q1Yg2NmKOybp4kvaq
tdcW0fs509z4xj1J8vFKYZtO7Hf13rS8nPEiO/3F90h8wv2+qqHwQdybsCRE
Kxmj219vlFyf703anv2RCUGHNcik5IEP8f/zfmMvWuPDsOKRs76kwTfg3+0u
7M8eaQ25jPmTxPjRn9Xonv0C/9rjLhH3UiPmV/RrgZoefQgg/L939B/uxv1l
KTPLzQwkdj4fq1h7MH/mGmmznwgmKgyt54roKIP63Zovggl7ycMnNmin/wy2
dYuHkLyfIell6G2b3pfcXAghCxflrlzoxfrz13RHxLvL5D3tTmAaep2G2a6C
g2Ek7SmrdzO67uweUvEqjOjNdZ2W7aPBi48ak+/eXiH0C1cPDv/f635Ipf+9
Ss7e/q7F+xnnTT1Xn88xEUSzyFJdC0246l/Fbb9Ghn4oSSehsz256dm214mC
Vz/n8X4aRIpWlY0tjyKstw6xhqJDp5YWNjyNIh1Pihfy0EulVgfOu0SToO83
pjkHaPCqGFYODMeQt+fV39egZ8Nni+vC40hyXEb9N3QD28R05bc44lnAXSk6
iPmcxVxAyfomEfr2Jf8Sum+9b3DR3lvk9LmbN5WGsF9kV7jzSpJG1GMXr9ui
j81uoHizaIQr3+lyDFrLqMDDQJpOCpnkwiT6Z/xGjo/qDMLiMXkifZgGgXZa
NWv/u0NUJTbKf0TnaQn7fJJIIG7dh9lXfcF5oK3Lqao5gXQdePzcGT31euay
gVISKdpyXlRxBONl47SfqlwKmWi/99sezc9lpFz/O4VsjWptoaHlN3c2Sjqk
kug/SmF/0JE+3fWn9twjZ1p/jlWO0iCnqmJAiiOdJEdsr/6O3jde5/svLJ20
EdPEbWPYb9TmqrxfnkG0Hj4ziEDfu/arJ3fVfSISFvDk6DjG76mGake1LGKo
8SgyBN1xf7RS4l0Wufq116EQnbdvVC7AMZvMWoCg4ATW96vavXvvPSBNKssD
+tAvL47+uHcgl7BOKZ7gmcT+Mvtg2eW/uWRPmr3cPvTvjItVhYWPSPbauv77
aJdSl4MOu/JI6OhVHbcpzM9/Nhf4KBaQ0rulm1PQFqu2PV+fUkCYxuO/mtHS
c4oK2mufEItK/RzlaawPWj+6k2efEJU7a7gX0PEFDuJzg0XE9SgZ2zlDg2v9
7iZTjk9JGptHlTX67Hatuj+TT8laz2avGrSesCl/yrISMqZ/q/M6kwZ/8rvS
RU88I5uX1RaUofsUTx5o/f6MnCiZvT6D7kqp5Va5/ZxUi5tQRl9pwNOzc43N
4AuStCCUJvwN+8mqc7alj8vJvtUWMgfRetbdtXesK8gYf0qRN9o2sf/Rdo5K
oiQvUf8B7Wa52bK2tpK8sd01FfUd46eklrvGqJqcc79wsQxdVrRcOvdFNRG4
VPJvAl3kMmXeLllD7G5T6w7+oEFwr1DuJtZa8ueVnuryWZwnVZUKW7vrSPKH
GxUK6KWGWwWbTF8R7f73B63Rj/lOG3N3vCKxf06Yl6FND3xbv7m3nuyQtQv2
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
Z2LW/61Yp2bT+Ys0zYT220YyINbHafgXy08ibdN5PhZt0S2Smh07R8Jbdq6o
QHce744MEJsjpKhTYuMNnFdWfE8/fXiWPPKTc2lHXx6t71Mv/U5usHbN6Ufj
8xfPaG5pZpKxi/JX/dBbNZdNmMowifZomFA2uikm2KPq2gxZeC2/hy2GAbIC
F06OHJ0mLjFXgivQc7sFlKaWJsgrlu51M+hG6uaptV4TRMxTIX1jLAOyhVND
mWPjpOt4d50feke8xL/nPWNEX2QXp3IcAxwDVbmEhkZIZmR4kh165lgMX6vz
CFm+2L0zDi0SES84PvuFPPscbjiDZtU7tGoZzxey434PLfsmni/G7KlsmyGy
SiFiy6bbDNir/dGeaddPtq0JqddHZ7956q23pp9oTfi5+6KXCzVsu+f5mfhm
uJR9QHMdvc93Q7aPTAgdNb1Ow/mqVpc2XddNVv48sFSC7tvH312l1E3EP2hl
fkH7paT1+mR0EYsoxVktOvYn812fj0V/Ik3LBGJ/oRX3/e49GNpBJvrW7pZg
YD22rNYtYusgq8pW9Rmh3fNeS92JbCda3n9kHqNdJBNiUpI/kicTPfUO8QzQ
vKvHbdH/gdA/pC+13MF6EyQgK/m6mTzJT8pcQn8SDGudd28m76NoBjsTGDC5
aNKQKtBM2A9eTYxA61duHPZrbyL+Zc67IRHXR49l6PqxRkK/Y9/nij5q91fO
sfQtKfS2uJKADrjKGmMu9pZMKRz5MIceEhlZslp6Tazu7/LITWKAGO+LK1t7
6ol/qLRAF5rn0MK+PWb1hGEt/nLVXaznvRe3Lna9Is3C/Jz26Nci7Pu1h+vI
vujfmcLJDGijcVf689USSZ+KvvAUzHev00REBypJ5kTg6VL0J82/yXIBlUTC
SnNmHD0QMnXksnAl2abzbPFwKgP+dgY8uf20nIivL9y4/h7Gp/PZeJbpFyQt
/HyGNto8Z3hVi/YLIjYvL+uNPv92pdb51OdEbCB3zyf0bOWGrEa7Z2RLXqZZ
ShrW17GK56XrSkiqmONgM1p6KTn73ZViIkoXd16ejv2xe+QNvsWnZHNgqp8j
OrBj7fDX2SKy6VBCvEwGA4wlz4uzsReSpHLTLZZoqUtg1nDrCdmoKJgdjf4o
dVtNTQwtfLvkG7qZTaRsQLeAiIxGtZfcZ0APJ7t0rHkeSTA7bDWOnqjj/VSU
8JgIN3GMiGQyYJnih8VjfY+I0NOrc4GZ/4/XLM1Yz1wieDmETzsL61Wms8OF
xgeE/hOSLqLTYivS82UfEAHnf+JZ6P1O51dkx2YTgWOXlDiy8X4oavG0zyJ8
oheNmtEPOp3yNBXvk9s3lbqWPWCAyeG7d3kfZxC+ld9tldC3hl4Gsu7MIOun
3c/T0azLlc7OKqUT3hdOsRY5DFjDeP5wm8M9clNuu1A0WrqGY92vn6lkXdqX
lAr05CfdBusbqYTnml2e2EMGqDPKxc8FphDukxZNY+jBhtwvg/8lkX9bdq4U
zMXz/dSh/mFHIpmZWKR00Kv0hUKUlRJJY1DKo3voVtGxAKW5OyQic/CG2SP8
vhzLwco0BvE5V1gbgfbdHvPCSoBBTmuELRSjx6rvLolF0Yl2k4Tr+sc4f0R1
Ony6TCMsP50ONaIbWrfWy9y+RZgV6pfn0QmF5X47RG+RvmscL3bkYb+x7dqH
17k3SdmmXOkr6Gc7+jor3scRXx3mapKP/YzMxTtMxVhyhrtyryv6aA5x50yP
ISafYv0S0AKeA1X3h6OJspvi+E+0vo94SdWFKPL19sWGvAJ8n/lXlf/qrpPP
VrosfWh3mZ3tS+LXSdMOQTWuJ7hfMnUixVeukdyy0iwn9IuthbUzxhHEafhv
+NZCrAcJsty2wuHk5OPG8qPot/dH2jpvXiG6vnd/BqLD2x6xOnNfIdu44HQX
elyj5OzNdWGkXylU51YR1jtlwwvb1ELJ+0WjwCq0p/mbuaiGEFJeL/6UiWae
Yv8YZR5Ckszrth1+ivNrosV9/mvBxPQyOytbMfZPHWMNXsuCyAGDT3uU0P7U
5cexBwOJqmCOly3aTJch8u9WAOF7eGjoJfqXw9zZM7svkebW6GrvEgbkSNk0
dj/yJUpB58xy0OwPVmoarfAldCmj773ov5nba8DSh1gE84vplDJgsSWMbc1m
bzK+Mylk/TMGXPzkful8sxc5/ClQ+AD69vrsu0m6XiQ/zLrAH31T02uHc6Un
8e4WGxhAm5+tEo4uP0+WX3uglf8c9/dcSuzqOg/iqBzZOYRmqByPuj3iTho+
u54TfIHxV+VfsWqtO4lWVUgNQm/ScSNc7q5kw3Dx0uEyBpz987swwv0sCYqJ
ZwSjt1p7mOu9cCKDGv7yReg0xYKFNi4nkh1HWW94yYDCMEZf08vTRBlqy8fR
+wI6zrIedyCMifsmm8oZkKu2YNpUY0/maVdnDNGDXgn7/Hfbk8op/c2l6Du9
bD94pO2IQUJLYHgFzjurx/5FqtuQfJ1C/ufo7douVqcjrQnft9uPptFWx489
XHhgRboOmPYer8T9U5YSPPXHgpye69MUr2LA8zcvVS/0nCKvUyvbTNCHJTs2
3hU7RWQPp7leR1e3xIZ2upmS72mOSd/+f/+Q4q5/vCdJkOHU34rq/+eXjeO+
t4+Tgb/vbv1A10892J6+ZEy0s/Jkttdg/YgptR52NyYc/zzNo9GKMqONmqeM
iNuD4z+q0G8T/Yw2tx0jzcdVI/+3r0D+4TkpmauDAu1MGCSUNY8Ay/+L996e
uhJgN331z10xQL6j1L6klKgAOwCdZyRA
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.021, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"P(\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(b\\)]\\)\\!\\(\\*SuperscriptBox[\\(h\\), \
\\(2\\)]\\))/\\!\\(\\*SubscriptBox[\\(P\\), \\(max\\)]\\)\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(b\\)]\\)\\!\\(\\*SuperscriptBox[\\(h\\), \\(2\\)]\\)\"", TraditionalForm], 
     None}},
  FrameStyle->Thickness[0.004],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{{0.02209, {
       RGBColor[
       0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
       Thickness[Large]}}, {0.02241, {
       RGBColor[
       0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
       Thickness[Large]}}, {0.022013774395936558`, {
       RGBColor[
       0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
       Thickness[Large], 
       Dashing[{Small, Small}]}}, {0.02228668355155933, {
       RGBColor[
       0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
       Thickness[Large], 
       Dashing[{Small, Small}]}}}, {}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{519.37109375, Automatic},
  LabelStyle->{FontSize -> 12},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.02097, 0.023209999999999998`}, {0., 0.9999999897895239}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.720857283301112*^9, 3.720857291464526*^9}, 
   3.720857377674274*^9, 3.720859076699512*^9, {3.720859132582591*^9, 
   3.720859241856031*^9}, {3.720862766233068*^9, 3.720862783280697*^9}, {
   3.720863162207919*^9, 3.720863172775023*^9}, {3.72086685172744*^9, 
   3.720866895691491*^9}, {3.720866985436514*^9, 3.720867024596246*^9}, {
   3.720867154523114*^9, 3.7208671685032463`*^9}, {3.720877036492494*^9, 
   3.720877050608707*^9}, 3.720918882574518*^9, 3.720918931831883*^9, {
   3.720937376085285*^9, 3.7209373918467503`*^9}, {3.720937684907851*^9, 
   3.720937692902494*^9}, {3.720937767942964*^9, 3.720937782514031*^9}, 
   3.720938069091546*^9, 3.720938232974682*^9, 3.720938265759248*^9, 
   3.720938296016038*^9, {3.72093870316501*^9, 3.7209387615766983`*^9}, 
   3.720939190896064*^9, 3.720959032620167*^9, 3.7209591314731503`*^9, 
   3.720959573301422*^9, 3.720962484927476*^9, 3.7209746928231773`*^9, {
   3.721103703745027*^9, 3.7211037129702473`*^9}, 3.7213950989577227`*^9, 
   3.721404224834203*^9, 3.72150422804276*^9, {3.721504258770561*^9, 
   3.721504262922287*^9}, 3.7215448968572493`*^9, 3.722086556387536*^9, 
   3.722148184120797*^9, 3.7221486258126087`*^9, 3.722571590743492*^9, 
   3.722667577691021*^9, 3.722845979664093*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1304, 723},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrintPrecision->8,
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 366, 4, 65, "Chapter"],
Cell[CellGroupData[{
Cell[971, 30, 201, 3, 44, "Subsection"],
Cell[1175, 35, 319, 6, 30, "Text"],
Cell[1497, 43, 246, 6, 28, "Input",
 InitializationCell->True],
Cell[1746, 51, 202, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[1973, 59, 754, 12, 28, "Input",
 InitializationCell->True],
Cell[2730, 73, 380, 5, 28, "Output"]
}, Open  ]],
Cell[3125, 81, 385, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[3535, 92, 506, 9, 28, "Input",
 InitializationCell->True],
Cell[4044, 103, 149, 3, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4242, 112, 157, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[4424, 118, 159, 2, 35, "Subsubsection"],
Cell[4586, 122, 4700, 80, 148, "Input",
 InitializationCell->True],
Cell[9289, 204, 3910, 77, 283, "Input",
 InitializationCell->True],
Cell[13202, 283, 1136, 19, 46, "Input",
 InitializationCell->True],
Cell[14341, 304, 177, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[14543, 312, 1490, 30, 80, "Input",
 InitializationCell->True],
Cell[16036, 344, 295, 6, 22, "Print"],
Cell[16334, 352, 77, 1, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16460, 359, 98, 1, 35, "Subsubsection"],
Cell[16561, 362, 190, 4, 30, "Text"],
Cell[16754, 368, 322, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[17101, 378, 756, 14, 28, "Input"],
Cell[17860, 394, 461, 10, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18358, 409, 467, 7, 28, "Input"],
Cell[18828, 418, 680, 11, 28, "Output"]
}, Open  ]],
Cell[19523, 432, 186, 4, 30, "Text"],
Cell[19712, 438, 3204, 86, 114, "Input"],
Cell[22919, 526, 122, 1, 30, "Text"],
Cell[23044, 529, 789, 23, 56, "Input"],
Cell[23836, 554, 113, 1, 30, "Text"],
Cell[23952, 557, 850, 24, 56, "Input"],
Cell[24805, 583, 203, 4, 30, "Text"],
Cell[25011, 589, 348, 7, 28, "Input"],
Cell[25362, 598, 103, 1, 30, "Text"],
Cell[25468, 601, 950, 20, 97, "Input"],
Cell[26421, 623, 723, 12, 46, "Input"],
Cell[27147, 637, 569, 10, 46, "Input"],
Cell[CellGroupData[{
Cell[27741, 651, 172, 3, 28, "Input"],
Cell[27916, 656, 124, 2, 28, "Output"]
}, Open  ]],
Cell[28055, 661, 2153, 48, 63, "Input"],
Cell[30211, 711, 1632, 42, 97, "Input"],
Cell[CellGroupData[{
Cell[31868, 757, 1560, 34, 63, "Input"],
Cell[33431, 793, 2252, 35, 67, "Message"],
Cell[35686, 830, 2252, 35, 67, "Message"],
Cell[37941, 867, 2252, 35, 67, "Message"],
Cell[40196, 904, 2251, 35, 67, "Message"]
}, Open  ]],
Cell[42462, 942, 1183, 28, 63, "Input"],
Cell[43648, 972, 1440, 30, 97, "Input"],
Cell[CellGroupData[{
Cell[45113, 1006, 559, 13, 28, "Input"],
Cell[45675, 1021, 29053, 486, 235, "Output"]
}, Open  ]],
Cell[74743, 1510, 110, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[74878, 1515, 1205, 30, 46, "Input"],
Cell[76086, 1547, 283, 4, 28, "Output"],
Cell[76372, 1553, 284, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76693, 1562, 1566, 35, 46, "Input"],
Cell[78262, 1599, 782, 11, 28, "Output"],
Cell[79047, 1612, 782, 11, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79866, 1628, 1578, 35, 46, "Input"],
Cell[81447, 1665, 733, 10, 28, "Output"],
Cell[82183, 1677, 733, 10, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82953, 1692, 502, 12, 28, "Input"],
Cell[83458, 1706, 586, 8, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84081, 1719, 2294, 57, 80, "Input"],
Cell[86378, 1778, 591, 8, 28, "Output"],
Cell[86972, 1788, 589, 8, 28, "Output"],
Cell[87564, 1798, 591, 8, 28, "Output"],
Cell[88158, 1808, 591, 8, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88786, 1821, 5698, 128, 195, "Input"],
Cell[94487, 1951, 65091, 1088, 351, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

